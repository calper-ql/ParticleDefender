// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: particles.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "particles.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ProtoVectorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProtoVector>
     _instance;
} _ProtoVector_default_instance_;
class ProtoParticleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProtoParticle>
     _instance;
} _ProtoParticle_default_instance_;
class ProtoAcknowledgeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProtoAcknowledge>
     _instance;
} _ProtoAcknowledge_default_instance_;
class ProtoSizeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProtoSize>
     _instance;
} _ProtoSize_default_instance_;
class ProtoParticleSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProtoParticleSet>
     _instance;
} _ProtoParticleSet_default_instance_;

namespace protobuf_particles_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoVector, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoVector, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoVector, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoParticle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoParticle, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoParticle, velocity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAcknowledge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoAcknowledge, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoSize, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoParticleSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoParticleSet, particles_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ProtoVector)},
  { 8, -1, sizeof(ProtoParticle)},
  { 15, -1, sizeof(ProtoAcknowledge)},
  { 21, -1, sizeof(ProtoSize)},
  { 27, -1, sizeof(ProtoParticleSet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoVector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoParticle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoAcknowledge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoSize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoParticleSet_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "particles.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProtoVector_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProtoVector_default_instance_);_ProtoParticle_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProtoParticle_default_instance_);_ProtoAcknowledge_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProtoAcknowledge_default_instance_);_ProtoSize_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProtoSize_default_instance_);_ProtoParticleSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProtoParticleSet_default_instance_);_ProtoParticle_default_instance_._instance.get_mutable()->position_ = const_cast< ::ProtoVector*>(
      ::ProtoVector::internal_default_instance());
  _ProtoParticle_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::ProtoVector*>(
      ::ProtoVector::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017particles.proto\".\n\013ProtoVector\022\t\n\001x\030\001 "
      "\001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"O\n\rProtoPartic"
      "le\022\036\n\010position\030\001 \001(\0132\014.ProtoVector\022\036\n\010ve"
      "locity\030\002 \001(\0132\014.ProtoVector\"a\n\020ProtoAckno"
      "wledge\022$\n\005state\030\001 \001(\0162\025.ProtoAcknowledge"
      ".ACK\"\'\n\003ACK\022\010\n\004NONE\020\000\022\014\n\010CONTINUE\020\001\022\010\n\004S"
      "TOP\020\002\"\032\n\tProtoSize\022\r\n\005value\030\001 \001(\004\"5\n\020Pro"
      "toParticleSet\022!\n\tparticles\030\001 \003(\0132\016.Proto"
      "Particleb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 336);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "particles.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_particles_2eproto

const ::google::protobuf::EnumDescriptor* ProtoAcknowledge_ACK_descriptor() {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_enum_descriptors[0];
}
bool ProtoAcknowledge_ACK_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProtoAcknowledge_ACK ProtoAcknowledge::NONE;
const ProtoAcknowledge_ACK ProtoAcknowledge::CONTINUE;
const ProtoAcknowledge_ACK ProtoAcknowledge::STOP;
const ProtoAcknowledge_ACK ProtoAcknowledge::ACK_MIN;
const ProtoAcknowledge_ACK ProtoAcknowledge::ACK_MAX;
const int ProtoAcknowledge::ACK_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoVector::kXFieldNumber;
const int ProtoVector::kYFieldNumber;
const int ProtoVector::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoVector::ProtoVector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_particles_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoVector)
}
ProtoVector::ProtoVector(const ProtoVector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ProtoVector)
}

void ProtoVector::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

ProtoVector::~ProtoVector() {
  // @@protoc_insertion_point(destructor:ProtoVector)
  SharedDtor();
}

void ProtoVector::SharedDtor() {
}

void ProtoVector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoVector::descriptor() {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoVector& ProtoVector::default_instance() {
  protobuf_particles_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoVector* ProtoVector::New(::google::protobuf::Arena* arena) const {
  ProtoVector* n = new ProtoVector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoVector::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool ProtoVector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoVector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoVector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoVector)
  return false;
#undef DO_
}

void ProtoVector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoVector)
}

::google::protobuf::uint8* ProtoVector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoVector)
  return target;
}

size_t ProtoVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoVector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoVector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoVector)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoVector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoVector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoVector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoVector)
    MergeFrom(*source);
  }
}

void ProtoVector::MergeFrom(const ProtoVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoVector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void ProtoVector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoVector::CopyFrom(const ProtoVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoVector::IsInitialized() const {
  return true;
}

void ProtoVector::Swap(ProtoVector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoVector::InternalSwap(ProtoVector* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoVector::GetMetadata() const {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoVector

// float x = 1;
void ProtoVector::clear_x() {
  x_ = 0;
}
float ProtoVector::x() const {
  // @@protoc_insertion_point(field_get:ProtoVector.x)
  return x_;
}
void ProtoVector::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ProtoVector.x)
}

// float y = 2;
void ProtoVector::clear_y() {
  y_ = 0;
}
float ProtoVector::y() const {
  // @@protoc_insertion_point(field_get:ProtoVector.y)
  return y_;
}
void ProtoVector::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ProtoVector.y)
}

// float z = 3;
void ProtoVector::clear_z() {
  z_ = 0;
}
float ProtoVector::z() const {
  // @@protoc_insertion_point(field_get:ProtoVector.z)
  return z_;
}
void ProtoVector::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ProtoVector.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoParticle::kPositionFieldNumber;
const int ProtoParticle::kVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoParticle::ProtoParticle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_particles_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoParticle)
}
ProtoParticle::ProtoParticle(const ProtoParticle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::ProtoVector(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::ProtoVector(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtoParticle)
}

void ProtoParticle::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&velocity_) -
      reinterpret_cast<char*>(&position_)) + sizeof(velocity_));
  _cached_size_ = 0;
}

ProtoParticle::~ProtoParticle() {
  // @@protoc_insertion_point(destructor:ProtoParticle)
  SharedDtor();
}

void ProtoParticle::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete velocity_;
}

void ProtoParticle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoParticle::descriptor() {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoParticle& ProtoParticle::default_instance() {
  protobuf_particles_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoParticle* ProtoParticle::New(::google::protobuf::Arena* arena) const {
  ProtoParticle* n = new ProtoParticle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoParticle::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  _internal_metadata_.Clear();
}

bool ProtoParticle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoParticle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtoVector position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoVector velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoParticle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoParticle)
  return false;
#undef DO_
}

void ProtoParticle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoVector position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->position_, output);
  }

  // .ProtoVector velocity = 2;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->velocity_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoParticle)
}

::google::protobuf::uint8* ProtoParticle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoVector position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->position_, deterministic, target);
  }

  // .ProtoVector velocity = 2;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->velocity_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoParticle)
  return target;
}

size_t ProtoParticle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoParticle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtoVector position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // .ProtoVector velocity = 2;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->velocity_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoParticle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoParticle)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoParticle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoParticle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoParticle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoParticle)
    MergeFrom(*source);
  }
}

void ProtoParticle::MergeFrom(const ProtoParticle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoParticle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::ProtoVector::MergeFrom(from.position());
  }
  if (from.has_velocity()) {
    mutable_velocity()->::ProtoVector::MergeFrom(from.velocity());
  }
}

void ProtoParticle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoParticle::CopyFrom(const ProtoParticle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoParticle::IsInitialized() const {
  return true;
}

void ProtoParticle::Swap(ProtoParticle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoParticle::InternalSwap(ProtoParticle* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(velocity_, other->velocity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoParticle::GetMetadata() const {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoParticle

// .ProtoVector position = 1;
bool ProtoParticle::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void ProtoParticle::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::ProtoVector& ProtoParticle::position() const {
  const ::ProtoVector* p = position_;
  // @@protoc_insertion_point(field_get:ProtoParticle.position)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoVector*>(
      &::_ProtoVector_default_instance_);
}
::ProtoVector* ProtoParticle::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::ProtoVector;
  }
  // @@protoc_insertion_point(field_mutable:ProtoParticle.position)
  return position_;
}
::ProtoVector* ProtoParticle::release_position() {
  // @@protoc_insertion_point(field_release:ProtoParticle.position)
  
  ::ProtoVector* temp = position_;
  position_ = NULL;
  return temp;
}
void ProtoParticle::set_allocated_position(::ProtoVector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoParticle.position)
}

// .ProtoVector velocity = 2;
bool ProtoParticle::has_velocity() const {
  return this != internal_default_instance() && velocity_ != NULL;
}
void ProtoParticle::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) delete velocity_;
  velocity_ = NULL;
}
const ::ProtoVector& ProtoParticle::velocity() const {
  const ::ProtoVector* p = velocity_;
  // @@protoc_insertion_point(field_get:ProtoParticle.velocity)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoVector*>(
      &::_ProtoVector_default_instance_);
}
::ProtoVector* ProtoParticle::mutable_velocity() {
  
  if (velocity_ == NULL) {
    velocity_ = new ::ProtoVector;
  }
  // @@protoc_insertion_point(field_mutable:ProtoParticle.velocity)
  return velocity_;
}
::ProtoVector* ProtoParticle::release_velocity() {
  // @@protoc_insertion_point(field_release:ProtoParticle.velocity)
  
  ::ProtoVector* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
void ProtoParticle::set_allocated_velocity(::ProtoVector* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoParticle.velocity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoAcknowledge::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoAcknowledge::ProtoAcknowledge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_particles_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoAcknowledge)
}
ProtoAcknowledge::ProtoAcknowledge(const ProtoAcknowledge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:ProtoAcknowledge)
}

void ProtoAcknowledge::SharedCtor() {
  state_ = 0;
  _cached_size_ = 0;
}

ProtoAcknowledge::~ProtoAcknowledge() {
  // @@protoc_insertion_point(destructor:ProtoAcknowledge)
  SharedDtor();
}

void ProtoAcknowledge::SharedDtor() {
}

void ProtoAcknowledge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoAcknowledge::descriptor() {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoAcknowledge& ProtoAcknowledge::default_instance() {
  protobuf_particles_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoAcknowledge* ProtoAcknowledge::New(::google::protobuf::Arena* arena) const {
  ProtoAcknowledge* n = new ProtoAcknowledge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoAcknowledge::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoAcknowledge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _internal_metadata_.Clear();
}

bool ProtoAcknowledge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoAcknowledge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtoAcknowledge.ACK state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::ProtoAcknowledge_ACK >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoAcknowledge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoAcknowledge)
  return false;
#undef DO_
}

void ProtoAcknowledge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoAcknowledge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoAcknowledge.ACK state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoAcknowledge)
}

::google::protobuf::uint8* ProtoAcknowledge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoAcknowledge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoAcknowledge.ACK state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoAcknowledge)
  return target;
}

size_t ProtoAcknowledge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoAcknowledge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtoAcknowledge.ACK state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoAcknowledge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoAcknowledge)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoAcknowledge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoAcknowledge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoAcknowledge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoAcknowledge)
    MergeFrom(*source);
  }
}

void ProtoAcknowledge::MergeFrom(const ProtoAcknowledge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoAcknowledge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
}

void ProtoAcknowledge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoAcknowledge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoAcknowledge::CopyFrom(const ProtoAcknowledge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoAcknowledge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoAcknowledge::IsInitialized() const {
  return true;
}

void ProtoAcknowledge::Swap(ProtoAcknowledge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoAcknowledge::InternalSwap(ProtoAcknowledge* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoAcknowledge::GetMetadata() const {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoAcknowledge

// .ProtoAcknowledge.ACK state = 1;
void ProtoAcknowledge::clear_state() {
  state_ = 0;
}
::ProtoAcknowledge_ACK ProtoAcknowledge::state() const {
  // @@protoc_insertion_point(field_get:ProtoAcknowledge.state)
  return static_cast< ::ProtoAcknowledge_ACK >(state_);
}
void ProtoAcknowledge::set_state(::ProtoAcknowledge_ACK value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:ProtoAcknowledge.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoSize::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoSize::ProtoSize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_particles_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoSize)
}
ProtoSize::ProtoSize(const ProtoSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ProtoSize)
}

void ProtoSize::SharedCtor() {
  value_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ProtoSize::~ProtoSize() {
  // @@protoc_insertion_point(destructor:ProtoSize)
  SharedDtor();
}

void ProtoSize::SharedDtor() {
}

void ProtoSize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoSize::descriptor() {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoSize& ProtoSize::default_instance() {
  protobuf_particles_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoSize* ProtoSize::New(::google::protobuf::Arena* arena) const {
  ProtoSize* n = new ProtoSize;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoSize::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ProtoSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoSize)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoSize)
  return false;
#undef DO_
}

void ProtoSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoSize)
}

::google::protobuf::uint8* ProtoSize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoSize)
  return target;
}

size_t ProtoSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoSize)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoSize)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoSize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoSize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoSize)
    MergeFrom(*source);
  }
}

void ProtoSize::MergeFrom(const ProtoSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void ProtoSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoSize::CopyFrom(const ProtoSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoSize::IsInitialized() const {
  return true;
}

void ProtoSize::Swap(ProtoSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoSize::InternalSwap(ProtoSize* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoSize::GetMetadata() const {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoSize

// uint64 value = 1;
void ProtoSize::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ProtoSize::value() const {
  // @@protoc_insertion_point(field_get:ProtoSize.value)
  return value_;
}
void ProtoSize::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ProtoSize.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoParticleSet::kParticlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoParticleSet::ProtoParticleSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_particles_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoParticleSet)
}
ProtoParticleSet::ProtoParticleSet(const ProtoParticleSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      particles_(from.particles_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoParticleSet)
}

void ProtoParticleSet::SharedCtor() {
  _cached_size_ = 0;
}

ProtoParticleSet::~ProtoParticleSet() {
  // @@protoc_insertion_point(destructor:ProtoParticleSet)
  SharedDtor();
}

void ProtoParticleSet::SharedDtor() {
}

void ProtoParticleSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoParticleSet::descriptor() {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoParticleSet& ProtoParticleSet::default_instance() {
  protobuf_particles_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoParticleSet* ProtoParticleSet::New(::google::protobuf::Arena* arena) const {
  ProtoParticleSet* n = new ProtoParticleSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoParticleSet::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoParticleSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  particles_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoParticleSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoParticleSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoParticle particles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_particles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoParticleSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoParticleSet)
  return false;
#undef DO_
}

void ProtoParticleSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoParticleSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtoParticle particles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->particles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->particles(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoParticleSet)
}

::google::protobuf::uint8* ProtoParticleSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoParticleSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtoParticle particles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->particles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->particles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoParticleSet)
  return target;
}

size_t ProtoParticleSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoParticleSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProtoParticle particles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->particles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->particles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoParticleSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoParticleSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoParticleSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoParticleSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoParticleSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoParticleSet)
    MergeFrom(*source);
  }
}

void ProtoParticleSet::MergeFrom(const ProtoParticleSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoParticleSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  particles_.MergeFrom(from.particles_);
}

void ProtoParticleSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoParticleSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoParticleSet::CopyFrom(const ProtoParticleSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoParticleSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoParticleSet::IsInitialized() const {
  return true;
}

void ProtoParticleSet::Swap(ProtoParticleSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoParticleSet::InternalSwap(ProtoParticleSet* other) {
  using std::swap;
  particles_.InternalSwap(&other->particles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoParticleSet::GetMetadata() const {
  protobuf_particles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_particles_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoParticleSet

// repeated .ProtoParticle particles = 1;
int ProtoParticleSet::particles_size() const {
  return particles_.size();
}
void ProtoParticleSet::clear_particles() {
  particles_.Clear();
}
const ::ProtoParticle& ProtoParticleSet::particles(int index) const {
  // @@protoc_insertion_point(field_get:ProtoParticleSet.particles)
  return particles_.Get(index);
}
::ProtoParticle* ProtoParticleSet::mutable_particles(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoParticleSet.particles)
  return particles_.Mutable(index);
}
::ProtoParticle* ProtoParticleSet::add_particles() {
  // @@protoc_insertion_point(field_add:ProtoParticleSet.particles)
  return particles_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProtoParticle >*
ProtoParticleSet::mutable_particles() {
  // @@protoc_insertion_point(field_mutable_list:ProtoParticleSet.particles)
  return &particles_;
}
const ::google::protobuf::RepeatedPtrField< ::ProtoParticle >&
ProtoParticleSet::particles() const {
  // @@protoc_insertion_point(field_list:ProtoParticleSet.particles)
  return particles_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
